{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "BlackThorn"
  },
  "host": "localhost:8080",
  "tags": [
    {
      "name": "category",
      "description": "Operations about category"
    },
    {
      "name": "item",
      "description": "Operations about item"
    },
    {
      "name": "cart",
      "description": "Operations about cart"
    },
    {
      "name": "order",
      "description": "Operations about order"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/category": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add a new category to the store",
        "description": "",
        "operationId": "addCategory",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Update an existing category",
        "description": "",
        "operationId": "updateCategory",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete an existing category",
        "description": "",
        "operationId": "deleteCategory",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Category object that needs to be deleted from the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Get all category",
        "description": "",
        "operationId": "getAllCategory",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "404": {
            "description": "Categories not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/category/{category_Id}": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Find category by ID",
        "description": "Returns a single category",
        "operationId": "getCategoryById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "category_Id",
            "in": "path",
            "description": "ID of category to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/item": {
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Add a new item to the store",
        "description": "",
        "operationId": "addItem",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Item object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "item"
        ],
        "summary": "Update an existing item",
        "description": "",
        "operationId": "updateItem",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Item object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Item not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Delete an existing item",
        "description": "",
        "operationId": "deleteItem",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Item object that needs to be deleted from the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Item not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Get all item",
        "description": "",
        "operationId": "getAllItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "pageNo of item to return",
            "required": false,
            "type": "number"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name of item to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Categories not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/item/{item_Id}": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Find item by ID",
        "description": "Returns a single item",
        "operationId": "getItemById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "item_Id",
            "in": "path",
            "description": "ID of item to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    },
    "/cart": {
      "post": {
        "tags": [
          "cart"
        ],
        "summary": "Add a new cart to the store",
        "description": "",
        "operationId": "addCart",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cart object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "cart"
        ],
        "summary": "Update an existing cart",
        "description": "",
        "operationId": "updateCart",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cart object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cart not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "cart"
        ],
        "summary": "Delete an existing cart",
        "description": "",
        "operationId": "deleteCart",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cart object that needs to be deleted from the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cart not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "cart"
        ],
        "summary": "Get all item",
        "description": "",
        "operationId": "getAllCart",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "404": {
            "description": "Categories not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/cart/{cart_Id}": {
      "get": {
        "tags": [
          "cart"
        ],
        "summary": "Find cart by ID",
        "description": "Returns a single cart",
        "operationId": "getCartById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "cart_Id",
            "in": "path",
            "description": "ID of cart to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    },
    "/cart/addItem": {
      "post": {
        "tags": [
          "cart"
        ],
        "summary": "Add item to cart",
        "description": "add item to cart",
        "operationId": "addItemToCart",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "item object that needs to be added to the cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "404": {
            "description": "Invalid item details"
          }
        }
      }
    },
    "/cart/removeItem": {
      "post": {
        "tags": [
          "cart"
        ],
        "summary": "Remove item from cart",
        "description": "Remove item from cart",
        "operationId": "removeItemFromCart",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "item object that needs to be removed from the cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "404": {
            "description": "Invalid item details"
          }
        }
      }
    },
    "/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add a new order to the store",
        "description": "",
        "operationId": "addOrder",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Delete an existing order",
        "description": "",
        "operationId": "deleteOrder",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Cart object that needs to be deleted from the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cart not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get all orders",
        "description": "",
        "operationId": "getAllOrders",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "404": {
            "description": "Orders not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/order/{order_Id}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Find order by ID",
        "description": "Returns a single order",
        "operationId": "getOrderById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "order_Id",
            "in": "path",
            "description": "ID of order to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "string"
        },
        "name": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "discount": {
          "type": "integer",
          "format": "int32"
        },
        "tax": {
          "type": "integer",
          "format": "int32"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "xml": {
        "name": "Item"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Cart": {
      "type": "object",
      "properties": {
        "cart_id": {
          "type": "integer",
          "format": "int64"
        },
        "subtotal": {
          "type": "integer",
          "format": "int64"
        },
        "discounts": {
          "type": "integer",
          "format": "int64"
        },
        "tax": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date_time"
        }
      },
      "xml": {
        "name": "Cart"
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "order_id": {
          "type": "integer",
          "format": "int64"
        },
        "cart_id": {
          "type": "integer",
          "format": "int64"
        },
        "subtotal": {
          "type": "integer",
          "format": "int64"
        },
        "discounts": {
          "type": "integer",
          "format": "int64"
        },
        "tax": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date_time"
        }
      },
      "xml": {
        "name": "Order"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}